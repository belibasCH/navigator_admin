{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ebr\\\\code\\\\navigator_admin\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport logo from './logo.svg';\nimport './App.css';\nimport Navbar from \"./components/Navbar\";\nimport Dashboard from \"./components/Dashboard\";\nimport Navigatoren from \"./components/Navigatoren\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [answer, setAnswer] = useState(undefined);\n  const [waiting, setWaiting] = useState(true);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n\n  const getAnswers = async () => {\n    console.log(\"Enter getAnswers\");\n\n    try {\n      const response = await fetch(\"http://\" + server_url + \"/navigators\");\n\n      if (response.ok) {\n        const answers = await response.json();\n\n        if (answers.length === 1) {\n          const newAnswer = answers[0];\n\n          if (answer === undefined || newAnswer.id !== answer.id) {\n            setAnswer(newAnswer);\n            setWaiting(false);\n            console.log(newAnswer);\n          }\n        }\n      }\n    } catch (error) {\n      setErrorMessage(\"Error! Server is not available\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-gray-600 h-screen\",\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"h-full flex flex-row border-t-top border-l-left p-12 w-full\",\n        children: /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            element: /*#__PURE__*/_jsxDEV(Dashboard, {\n              getAnswers: getAnswers\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/Navigatoren\",\n            element: /*#__PURE__*/_jsxDEV(Navigatoren, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 14\n  }, this);\n}\n\n_s(App, \"PiD9eaHVAlnIGsjW4Kquddwc4Tc=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","Navbar","Dashboard","Navigatoren","BrowserRouter","Routes","Route","App","answer","setAnswer","useState","undefined","waiting","setWaiting","errorMessage","setErrorMessage","getAnswers","console","log","response","fetch","server_url","ok","answers","json","length","newAnswer","id","error"],"sources":["C:/Users/ebr/code/navigator_admin/src/App.js"],"sourcesContent":["import logo from './logo.svg';\r\nimport './App.css';\r\nimport Navbar from \"./components/Navbar\";\r\nimport Dashboard from \"./components/Dashboard\";\r\nimport Navigatoren from \"./components/Navigatoren\";\r\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\"\r\n\r\n\r\n\r\nfunction App() {\r\n\r\n    const [answer, setAnswer] = useState(undefined);\r\n    const [waiting, setWaiting] = useState(true);\r\n    const [errorMessage, setErrorMessage] = useState(\"\");\r\n\r\n    const getAnswers = async() => {\r\n        console.log(\"Enter getAnswers\");\r\n        try {\r\n            const response = await fetch(\r\n                \"http://\" + server_url + \"/navigators\"\r\n            );\r\n            if (response.ok) {\r\n                const answers = await response.json();\r\n                if (answers.length === 1) {\r\n                    const newAnswer = answers[0];\r\n                    if (answer === undefined || newAnswer.id !== answer.id) {\r\n                        setAnswer(newAnswer);\r\n                        setWaiting(false);\r\n                        console.log(newAnswer);\r\n                    }\r\n                }\r\n            }\r\n        } catch (error) {\r\n            setErrorMessage(\"Error! Server is not available\");\r\n        }\r\n    };\r\n    return ( <\r\n        BrowserRouter >\r\n        <\r\n        div className = \"text-gray-600 h-screen\" >\r\n        <\r\n        Navbar / >\r\n        <\r\n        main className = \"h-full flex flex-row border-t-top border-l-left p-12 w-full\" >\r\n\r\n\r\n        <\r\n        Routes >\r\n        <\r\n        Route path = \"/\"\r\n        element = { < Dashboard getAnswers = { getAnswers }\r\n            />} / >\r\n            <\r\n            Route path = \"/Navigatoren\"\r\n            element = { < Navigatoren / > }\r\n            />\r\n\r\n\r\n            <\r\n            /Routes>\r\n\r\n\r\n            <\r\n            /main> <\r\n            /div> <\r\n            /BrowserRouter>\r\n\r\n        );\r\n    }\r\n\r\n    export default App;"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,YAAjB;AACA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,SAASC,aAAT,EAAwBC,MAAxB,EAAgCC,KAAhC,QAA6C,kBAA7C;;;AAIA,SAASC,GAAT,GAAe;EAAA;;EAEX,MAAM,CAACC,MAAD,EAASC,SAAT,IAAsBC,QAAQ,CAACC,SAAD,CAApC;EACA,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBH,QAAQ,CAAC,IAAD,CAAtC;EACA,MAAM,CAACI,YAAD,EAAeC,eAAf,IAAkCL,QAAQ,CAAC,EAAD,CAAhD;;EAEA,MAAMM,UAAU,GAAG,YAAW;IAC1BC,OAAO,CAACC,GAAR,CAAY,kBAAZ;;IACA,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CACxB,YAAYC,UAAZ,GAAyB,aADD,CAA5B;;MAGA,IAAIF,QAAQ,CAACG,EAAb,EAAiB;QACb,MAAMC,OAAO,GAAG,MAAMJ,QAAQ,CAACK,IAAT,EAAtB;;QACA,IAAID,OAAO,CAACE,MAAR,KAAmB,CAAvB,EAA0B;UACtB,MAAMC,SAAS,GAAGH,OAAO,CAAC,CAAD,CAAzB;;UACA,IAAIf,MAAM,KAAKG,SAAX,IAAwBe,SAAS,CAACC,EAAV,KAAiBnB,MAAM,CAACmB,EAApD,EAAwD;YACpDlB,SAAS,CAACiB,SAAD,CAAT;YACAb,UAAU,CAAC,KAAD,CAAV;YACAI,OAAO,CAACC,GAAR,CAAYQ,SAAZ;UACH;QACJ;MACJ;IACJ,CAfD,CAeE,OAAOE,KAAP,EAAc;MACZb,eAAe,CAAC,gCAAD,CAAf;IACH;EACJ,CApBD;;EAqBA,oBAAS,QACL,aADK;IAAA,wBAEL;MACI,SAAS,EAAG,wBADhB;MAAA,wBAEA,QACA,MADA;QAAA;QAAA;QAAA;MAAA,QAFA,eAIA;QACK,SAAS,EAAG,6DADjB;QAAA,uBAIA,QACA,MADA;UAAA,wBAEA,QACA,KADA;YACM,IAAI,EAAG,GADb;YAEA,OAAO,eAAK,QAAE,SAAF;cAAY,UAAU,EAAKC;YAA3B;cAAA;cAAA;cAAA;YAAA;UAFZ;YAAA;YAAA;YAAA;UAAA,QAFA,eAMI,QACA,KADA;YACM,IAAI,EAAG,cADb;YAEA,OAAO,eAAK,QAAE,WAAF;cAAA;cAAA;cAAA;YAAA;UAFZ;YAAA;YAAA;YAAA;UAAA,QANJ;QAAA;UAAA;UAAA;UAAA;QAAA;MAJA;QAAA;QAAA;QAAA;MAAA,QAJA;IAAA;MAAA;MAAA;MAAA;IAAA,QAFK;EAAA;IAAA;IAAA;IAAA;EAAA,QAAT;AAgCC;;GA3DIT,G;;KAAAA,G;AA6DL,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}