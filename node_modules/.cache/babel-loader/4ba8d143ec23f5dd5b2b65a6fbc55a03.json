{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ebr\\\\code\\\\navigator_admin\\\\src\\\\components\\\\Dashboard.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Dashboard = () => {\n  _s();\n\n  const [answer, setPoll] = useState(\"\");\n  const [waiting, setWaiting] = useState(true);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n\n  const getAnswer = async () => {\n    console.log(\"enter Get\");\n\n    try {\n      const response = await fetch(\"http://\" + server_url + \"/navigators\");\n\n      if (response.ok) {\n        const polls = await response.json();\n        setPoll(polls);\n        setWaiting(false);\n        console.log(answer);\n      }\n    } catch (error) {\n      setErrorMessage(\"Error! Server is not available\");\n    }\n  };\n\n  useEffect(() => {\n    // Update the document title using the browser API\n    document.title = `You clicked ${count} times`;\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: getAnswer,\n        className: \"hover:animate-pulse bg-primary-100 font-medium hover:bg-blue-700 px-10 py-4 text-primary-200\",\n        children: \"Click me\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: answer[1].id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(Dashboard, \"IIGFv2+qzykG58ZE61oXYtxTXa8=\");\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","Dashboard","answer","setPoll","waiting","setWaiting","errorMessage","setErrorMessage","getAnswer","console","log","response","fetch","server_url","ok","polls","json","error","useEffect","document","title","count","id"],"sources":["C:/Users/ebr/code/navigator_admin/src/components/Dashboard.jsx"],"sourcesContent":["import React, {useState} from 'react'\r\n\r\n\r\n\r\nconst Dashboard = ()  => {\r\n    const [answer, setPoll] = useState(\"\");\r\n    const [waiting, setWaiting] = useState(true);\r\n    const [errorMessage, setErrorMessage] = useState(\"\");\r\n\r\n    const getAnswer = async() => {\r\n      console.log(\"enter Get\");\r\n        try {\r\n            const response = await fetch(\r\n                \"http://\" + server_url + \"/navigators\"\r\n            );\r\n            if (response.ok) {\r\n                const polls = await response.json();\r\n                        setPoll(polls);\r\n                        setWaiting(false);\r\n                        console.log(answer);\r\n                    }\r\n            \r\n        } catch (error) {\r\n            setErrorMessage(\"Error! Server is not available\");\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        // Update the document title using the browser API\r\n        document.title = `You clicked ${count} times`;\r\n      });\r\n\r\n    return (<>\r\n        <div className=\"\">\r\n            <h1>Dashboard</h1>\r\n            <button onClick={getAnswer} className=\"hover:animate-pulse bg-primary-100 font-medium hover:bg-blue-700 px-10 py-4 text-primary-200\" >Click me</button>\r\n    <p>{answer[1].id}</p>\r\n        </div>\r\n\r\n    </>\r\n\r\n    ) \r\n\r\n\r\n    \r\n}\r\n\r\nexport default Dashboard\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;;;AAIA,MAAMC,SAAS,GAAG,MAAO;EAAA;;EACrB,MAAM,CAACC,MAAD,EAASC,OAAT,IAAoBH,QAAQ,CAAC,EAAD,CAAlC;EACA,MAAM,CAACI,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,IAAD,CAAtC;EACA,MAAM,CAACM,YAAD,EAAeC,eAAf,IAAkCP,QAAQ,CAAC,EAAD,CAAhD;;EAEA,MAAMQ,SAAS,GAAG,YAAW;IAC3BC,OAAO,CAACC,GAAR,CAAY,WAAZ;;IACE,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CACxB,YAAYC,UAAZ,GAAyB,aADD,CAA5B;;MAGA,IAAIF,QAAQ,CAACG,EAAb,EAAiB;QACb,MAAMC,KAAK,GAAG,MAAMJ,QAAQ,CAACK,IAAT,EAApB;QACQb,OAAO,CAACY,KAAD,CAAP;QACAV,UAAU,CAAC,KAAD,CAAV;QACAI,OAAO,CAACC,GAAR,CAAYR,MAAZ;MACH;IAEZ,CAXD,CAWE,OAAOe,KAAP,EAAc;MACZV,eAAe,CAAC,gCAAD,CAAf;IACH;EACJ,CAhBD;;EAkBAW,SAAS,CAAC,MAAM;IACZ;IACAC,QAAQ,CAACC,KAAT,GAAkB,eAAcC,KAAM,QAAtC;EACD,CAHM,CAAT;EAKA,oBAAQ;IAAA,uBACJ;MAAK,SAAS,EAAC,EAAf;MAAA,wBACI;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ,eAEI;QAAQ,OAAO,EAAEb,SAAjB;QAA4B,SAAS,EAAC,8FAAtC;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAFJ,eAGJ;QAAA,UAAIN,MAAM,CAAC,CAAD,CAAN,CAAUoB;MAAd;QAAA;QAAA;QAAA;MAAA,QAHI;IAAA;MAAA;MAAA;MAAA;IAAA;EADI,iBAAR;AAaH,CAzCD;;GAAMrB,S;;KAAAA,S;AA2CN,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}