{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ebr\\\\code\\\\navigator_admin\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Navbar from \"./components/Navbar\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport Dashboard from './components/Dashboard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet server_url = \"localhost:8080/server\";\n\nconst App = () => {\n  _s();\n\n  const [poll, setPoll] = useState(undefined);\n  const [waiting, setWaiting] = useState(true);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [token, setToken] = useState(\"\");\n\n  const getQuestion = async () => {\n    try {\n      const response = await fetch(\"http://\" + server_url + \"/navigators\");\n\n      if (response.ok) {\n        const polls = await response.json();\n\n        if (polls.length === 1) {\n          const newPoll = polls[0];\n\n          if (poll === undefined || newPoll.id !== poll.id) {\n            setPoll(newPoll);\n            setWaiting(false);\n            console.log(newPoll);\n          }\n        }\n      }\n    } catch (error) {\n      setErrorMessage(\"Error! Server is not available\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-gray-600 h-screen\",\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"h-full border-t-16\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex md:flex-row flex-col h-full\",\n          children: /*#__PURE__*/_jsxDEV(Routes, {\n            children: /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/\",\n              element: /*#__PURE__*/_jsxDEV(Dashboard, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 54\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n\n_s(App, \"BUWwiLKdlySHHmbag3wbd3xDfZ4=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Navbar","BrowserRouter","Routes","Route","Dashboard","server_url","App","poll","setPoll","undefined","waiting","setWaiting","errorMessage","setErrorMessage","token","setToken","getQuestion","response","fetch","ok","polls","json","length","newPoll","id","console","log","error"],"sources":["C:/Users/ebr/code/navigator_admin/src/App.js"],"sourcesContent":["import React, { useState } from 'react'\r\nimport Navbar from \"./components/Navbar\";\r\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\"\r\nimport Dashboard from './components/Dashboard';\r\n\r\n\r\nlet server_url = \"localhost:8080/server\";\r\n\r\nconst App = () => {\r\n  const [poll, setPoll] = useState(undefined);\r\n    const [waiting, setWaiting] = useState(true);\r\n    const [errorMessage, setErrorMessage] = useState(\"\");\r\n    const [token, setToken] = useState(\"\");\r\n\r\n    const getQuestion = async() => {\r\n        try {\r\n            const response = await fetch(\r\n                \"http://\" + server_url + \"/navigators\"\r\n            );\r\n            if (response.ok) {\r\n                const polls = await response.json();\r\n                if (polls.length === 1) {\r\n                    const newPoll = polls[0];\r\n                    if (poll === undefined || newPoll.id !== poll.id) {\r\n                        setPoll(newPoll);\r\n                        setWaiting(false);\r\n                        console.log(newPoll)\r\n                    }\r\n                }\r\n            }\r\n        } catch (error) {\r\n            setErrorMessage(\"Error! Server is not available\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <BrowserRouter>\r\n            <div className=\"text-gray-600 h-screen\">\r\n                <Navbar />\r\n                <main className=\"h-full border-t-16\">\r\n                    <div className=\"flex md:flex-row flex-col h-full\">\r\n                        <Routes>\r\n                            <Route path=\"/\" element={<Dashboard />} />\r\n                            \r\n                        </Routes>\r\n                    </div>\r\n                </main>\r\n            </div>\r\n        </BrowserRouter>\r\n    );\r\n}\r\n\r\nexport default App;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,SAASC,aAAT,EAAwBC,MAAxB,EAAgCC,KAAhC,QAA6C,kBAA7C;AACA,OAAOC,SAAP,MAAsB,wBAAtB;;AAGA,IAAIC,UAAU,GAAG,uBAAjB;;AAEA,MAAMC,GAAG,GAAG,MAAM;EAAA;;EAChB,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAACU,SAAD,CAAhC;EACE,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,IAAD,CAAtC;EACA,MAAM,CAACa,YAAD,EAAeC,eAAf,IAAkCd,QAAQ,CAAC,EAAD,CAAhD;EACA,MAAM,CAACe,KAAD,EAAQC,QAAR,IAAoBhB,QAAQ,CAAC,EAAD,CAAlC;;EAEA,MAAMiB,WAAW,GAAG,YAAW;IAC3B,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CACxB,YAAYb,UAAZ,GAAyB,aADD,CAA5B;;MAGA,IAAIY,QAAQ,CAACE,EAAb,EAAiB;QACb,MAAMC,KAAK,GAAG,MAAMH,QAAQ,CAACI,IAAT,EAApB;;QACA,IAAID,KAAK,CAACE,MAAN,KAAiB,CAArB,EAAwB;UACpB,MAAMC,OAAO,GAAGH,KAAK,CAAC,CAAD,CAArB;;UACA,IAAIb,IAAI,KAAKE,SAAT,IAAsBc,OAAO,CAACC,EAAR,KAAejB,IAAI,CAACiB,EAA9C,EAAkD;YAC9ChB,OAAO,CAACe,OAAD,CAAP;YACAZ,UAAU,CAAC,KAAD,CAAV;YACAc,OAAO,CAACC,GAAR,CAAYH,OAAZ;UACH;QACJ;MACJ;IACJ,CAfD,CAeE,OAAOI,KAAP,EAAc;MACZd,eAAe,CAAC,gCAAD,CAAf;IACH;EACJ,CAnBD;;EAqBA,oBACI,QAAC,aAAD;IAAA,uBACI;MAAK,SAAS,EAAC,wBAAf;MAAA,wBACI,QAAC,MAAD;QAAA;QAAA;QAAA;MAAA,QADJ,eAEI;QAAM,SAAS,EAAC,oBAAhB;QAAA,uBACI;UAAK,SAAS,EAAC,kCAAf;UAAA,uBACI,QAAC,MAAD;YAAA,uBACI,QAAC,KAAD;cAAO,IAAI,EAAC,GAAZ;cAAgB,OAAO,eAAE,QAAC,SAAD;gBAAA;gBAAA;gBAAA;cAAA;YAAzB;cAAA;cAAA;cAAA;YAAA;UADJ;YAAA;YAAA;YAAA;UAAA;QADJ;UAAA;UAAA;UAAA;QAAA;MADJ;QAAA;QAAA;QAAA;MAAA,QAFJ;IAAA;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADJ;AAeH,CA1CD;;GAAMP,G;;KAAAA,G;AA4CN,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}