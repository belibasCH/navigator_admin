{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ebr\\\\code\\\\navigator_admin\\\\src\\\\components\\\\Dashboard.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet server_url = \"localhost:8080/server\";\n\nfunction Dashboard() {\n  _s();\n\n  const [answer, setAnswer] = useState(undefined);\n  const [waiting, setWaiting] = useState(true);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n\n  const getAnswers = async () => {\n    console.log(\"Enter getAnswers\");\n\n    try {\n      const response = await fetch(\"http://\" + server_url + \"/navigators\");\n\n      if (response.ok) {\n        const answers = await response.json();\n\n        if (answers.length === 1) {\n          const newAnswer = answers[0];\n\n          if (answer === undefined || newAnswer.id !== answer.id) {\n            setAnswer(newAnswer);\n            setWaiting(false);\n            console.log(newAnswer);\n          }\n        }\n      }\n    } catch (error) {\n      setErrorMessage(\"Error! Server is not available\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: getAnswers,\n        children: \"Click me\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(Dashboard, \"PiD9eaHVAlnIGsjW4Kquddwc4Tc=\");\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","server_url","Dashboard","answer","setAnswer","undefined","waiting","setWaiting","errorMessage","setErrorMessage","getAnswers","console","log","response","fetch","ok","answers","json","length","newAnswer","id","error"],"sources":["C:/Users/ebr/code/navigator_admin/src/components/Dashboard.jsx"],"sourcesContent":["import React, {useState} from 'react'\r\n\r\nlet server_url = \"localhost:8080/server\";\r\n\r\nfunction Dashboard() {\r\n    const [answer, setAnswer] = useState(undefined);\r\n    const [waiting, setWaiting] = useState(true);\r\n    const [errorMessage, setErrorMessage] = useState(\"\");\r\n\r\n    const getAnswers = async () => {\r\n        console.log(\"Enter getAnswers\");\r\n        try {\r\n            const response = await fetch(\r\n                \"http://\" + server_url + \"/navigators\"\r\n            );\r\n            if (response.ok) {\r\n                const answers = await response.json();\r\n                if (answers.length === 1) {\r\n                    const newAnswer = answers[0];\r\n                    if (answer === undefined || newAnswer.id !== answer.id) {\r\n                        setAnswer(newAnswer);\r\n                        setWaiting(false);\r\n                        console.log(newAnswer);\r\n                    }\r\n                }\r\n            }\r\n        } catch (error) {\r\n            setErrorMessage(\"Error! Server is not available\");\r\n        }\r\n    };\r\n\r\n\r\n    return (<>\r\n        <div className=\"\">\r\n            <h1>Dashboard</h1>\r\n            <button onClick={getAnswers} >Click me</button>\r\n\r\n        </div>\r\n\r\n    </>\r\n\r\n    )\r\n}\r\n\r\nexport default Dashboard\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;;AAEA,IAAIC,UAAU,GAAG,uBAAjB;;AAEA,SAASC,SAAT,GAAqB;EAAA;;EACjB,MAAM,CAACC,MAAD,EAASC,SAAT,IAAsBJ,QAAQ,CAACK,SAAD,CAApC;EACA,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,IAAD,CAAtC;EACA,MAAM,CAACQ,YAAD,EAAeC,eAAf,IAAkCT,QAAQ,CAAC,EAAD,CAAhD;;EAEA,MAAMU,UAAU,GAAG,YAAY;IAC3BC,OAAO,CAACC,GAAR,CAAY,kBAAZ;;IACA,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CACxB,YAAYb,UAAZ,GAAyB,aADD,CAA5B;;MAGA,IAAIY,QAAQ,CAACE,EAAb,EAAiB;QACb,MAAMC,OAAO,GAAG,MAAMH,QAAQ,CAACI,IAAT,EAAtB;;QACA,IAAID,OAAO,CAACE,MAAR,KAAmB,CAAvB,EAA0B;UACtB,MAAMC,SAAS,GAAGH,OAAO,CAAC,CAAD,CAAzB;;UACA,IAAIb,MAAM,KAAKE,SAAX,IAAwBc,SAAS,CAACC,EAAV,KAAiBjB,MAAM,CAACiB,EAApD,EAAwD;YACpDhB,SAAS,CAACe,SAAD,CAAT;YACAZ,UAAU,CAAC,KAAD,CAAV;YACAI,OAAO,CAACC,GAAR,CAAYO,SAAZ;UACH;QACJ;MACJ;IACJ,CAfD,CAeE,OAAOE,KAAP,EAAc;MACZZ,eAAe,CAAC,gCAAD,CAAf;IACH;EACJ,CApBD;;EAuBA,oBAAQ;IAAA,uBACJ;MAAK,SAAS,EAAC,EAAf;MAAA,wBACI;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ,eAEI;QAAQ,OAAO,EAAEC,UAAjB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAFJ;IAAA;MAAA;MAAA;MAAA;IAAA;EADI,iBAAR;AAUH;;GAtCQR,S;;KAAAA,S;AAwCT,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}